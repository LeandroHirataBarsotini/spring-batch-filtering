<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	">

	<import resource="../config/context.xml" />
	<import resource="../config/database.xml" />

	<bean id="relatorio" class="br.com.teste.spring_batch.model.Relatorio" scope="prototype" />

	<job id="job1" xmlns="http://www.springframework.org/schema/batch">
		<step id="stepPares" next="stepImpares">
			<tasklet>
				<chunk reader="cvsFileItemReader"
						processor="customItemProcessorPares" 
						writer="cvsFileItemWriterPares"
					commit-interval="10" />
			</tasklet>
		</step>
		
		<step id="stepImpares" next="simpleTask">
			<tasklet>
				<chunk reader="cvsFileItemReader"
						processor="customItemProcessorImpares" 
						writer="cvsFileItemWriterImpares"
					commit-interval="10" />
			</tasklet>
		</step>
		
		<step id="simpleTask">
			<tasklet ref="sysoutTasklet" />
		</step>
	</job>
	
	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<property name="resource" value="classpath:cvs/input/numeros.csv" />

		<property name="lineMapper">
		    <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
			<property name="lineTokenizer">
				<bean
					class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
					<property name="names" value="valor" />
				</bean>
			</property>
			<property name="fieldSetMapper">
				<bean class="br.com.teste.spring_batch.ValorFieldSetMapper" />
			</property>
		    </bean>
		</property>

	</bean>

	<bean id="cvsFileItemWriterPares" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<!-- write to this csv file -->
		<property name="resource" value="file:cvs/pares.csv" />
		<property name="shouldDeleteIfExists" value="true" />

		<property name="lineAggregator">
	  		<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="valor" />
					</bean>
				</property>
			</bean>
		</property>
  	</bean>
	
	<bean id="cvsFileItemWriterImpares" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<!-- write to this csv file -->
		<property name="resource" value="file:cvs/impares.csv" />
		<property name="shouldDeleteIfExists" value="true" />

		<property name="lineAggregator">
	  		<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="valor" />
					</bean>
				</property>
			</bean>
		</property>
  	</bean>
	
	<bean id="sysoutTasklet" class="br.com.teste.spring_batch.tasklet.SysoutTasklet" />
	
	<bean id="customItemProcessorPares" class="br.com.teste.spring_batch.processor.CustomItemProcessorPares" />
	
	<bean id="customItemProcessorImpares" class="br.com.teste.spring_batch.processor.CustomItemProcessorImpares" />

</beans>